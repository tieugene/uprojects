# Generated by Django 3.2.9 on 2021-11-23 19:31

import core.models
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Depart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('myid', models.PositiveBigIntegerField(blank=True, null=True, unique=True, validators=[core.models.validate_03], verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Deparment',
                'verbose_name_plural': 'Deparments',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='EMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
                'ordering': ('email',),
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
            ],
        ),
        migrations.CreateModel(
            name='Org',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('myid', models.BigIntegerField(blank=True, null=True, unique=True, validators=[core.models.validate_02], verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True, verbose_name='Name')),
                ('fullname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full name')),
                ('vat', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='VAT')),
                ('kpp', models.PositiveIntegerField(blank=True, null=True, verbose_name='KPP')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
                ('myid', models.PositiveBigIntegerField(blank=True, null=True, unique=True, validators=[core.models.validate_01], verbose_name='ID')),
                ('mid_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Middle name')),
                ('phone', models.CharField(blank=True, max_length=16, null=True, unique=True, verbose_name='Main Phone')),
                ('ptype', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Primary'), (2, 'Secondary'), (3, 'External'), (4, 'Indirect')], null=True, verbose_name='Type')),
                ('sex', models.BooleanField(blank=True, null=True, verbose_name='Sex')),
                ('tz', models.CharField(blank=True, max_length=32, null=True, verbose_name='Time zone')),
                ('sn_ok', models.URLField(blank=True, null=True, verbose_name='OK profile URL')),
                ('sn_ig', models.URLField(blank=True, null=True, verbose_name='Instagram profile URL')),
                ('sn_tg', models.CharField(blank=True, max_length=32, null=True, verbose_name='Telegram account')),
                ('sn_wa', models.CharField(blank=True, max_length=32, null=True, verbose_name='WhatsApp account')),
                ('sn_vb', models.CharField(blank=True, max_length=32, null=True, verbose_name='Viber account')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('statemod_at', models.DateTimeField(null=True, verbose_name='State updated')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
                'ordering': ('last_name', 'first_name', 'mid_name'),
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SnVK',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='Profile URL')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.person')),
            ],
            options={
                'verbose_name': 'VK profile',
                'verbose_name_plural': 'VK profiles',
                'ordering': ('url',),
            },
        ),
        migrations.CreateModel(
            name='SnFB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='Profile URL')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.person')),
            ],
            options={
                'verbose_name': 'FB profile',
                'verbose_name_plural': 'FB profiles',
                'ordering': ('url',),
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=16, verbose_name='Phone')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_set', to='core.person')),
            ],
            options={
                'verbose_name': 'Phone',
                'verbose_name_plural': 'Phones',
                'ordering': ('phone',),
            },
        ),
        migrations.AddIndex(
            model_name='person',
            index=models.Index(fields=['myid'], name='core_person_myid_61a213_idx'),
        ),
        migrations.AddIndex(
            model_name='person',
            index=models.Index(fields=['mid_name'], name='core_person_mid_nam_7800ec_idx'),
        ),
        migrations.AddIndex(
            model_name='org',
            index=models.Index(fields=['myid'], name='core_org_myid_e14802_idx'),
        ),
        migrations.AddIndex(
            model_name='org',
            index=models.Index(fields=['name'], name='core_org_name_674726_idx'),
        ),
        migrations.AddField(
            model_name='membership',
            name='depart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.depart'),
        ),
        migrations.AddField(
            model_name='membership',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.person'),
        ),
        migrations.AddField(
            model_name='email',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_set', to='core.person'),
        ),
        migrations.AddField(
            model_name='depart',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.org'),
        ),
        migrations.AddField(
            model_name='depart',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.depart'),
        ),
        migrations.AddField(
            model_name='depart',
            name='persons',
            field=models.ManyToManyField(through='core.Membership', to='core.Person'),
        ),
        migrations.AlterUniqueTogether(
            name='membership',
            unique_together={('depart', 'person')},
        ),
        migrations.AddIndex(
            model_name='depart',
            index=models.Index(fields=['myid'], name='core_depart_myid_7661a1_idx'),
        ),
        migrations.AddIndex(
            model_name='depart',
            index=models.Index(fields=['name'], name='core_depart_name_5f7327_idx'),
        ),
        migrations.AddIndex(
            model_name='depart',
            index=models.Index(fields=['parent'], name='core_depart_parent__4ee67f_idx'),
        ),
        migrations.AddIndex(
            model_name='depart',
            index=models.Index(fields=['org'], name='core_depart_org_id_f32bed_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='depart',
            unique_together={('name', 'parent_id', 'org_id')},
        ),
    ]
